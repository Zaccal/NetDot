{"ast":null,"code":"import { createRandomDate } from \"./../utils/utilsFn\";\nimport axios from \"axios\";\nexport class ApiService {\n  static async getUsers() {\n    const fromAPIUsers = (await axios.get(this.URL_USERS)).data.map(user => {\n      return {\n        id: user.id,\n        login: user.username,\n        email: user.email\n      };\n    });\n    return fromAPIUsers;\n  }\n  static async getPosts() {\n    const usersData = await this.getUsers();\n    let usersPosts;\n    usersData.forEach(async userData => {\n      usersPosts = (await axios.get(this.URL_POSTS)).data.map(post => {\n        return {\n          postId: post.id,\n          postTitle: post.title,\n          postBody: post.body,\n          createdDate: createRandomDate(),\n          userId: userData.id,\n          authorLogin: userData.login\n        };\n      });\n    });\n    return usersPosts !== undefined ? usersPosts : [];\n  }\n}\nApiService.URL_USERS = \"https://jsonplaceholder.typicode.com/users\";\nApiService.URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";","map":{"version":3,"names":["createRandomDate","axios","ApiService","getUsers","fromAPIUsers","get","URL_USERS","data","map","user","id","login","username","email","getPosts","usersData","usersPosts","forEach","userData","URL_POSTS","post","postId","postTitle","title","postBody","body","createdDate","userId","authorLogin","undefined"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/API/ApiService.ts"],"sourcesContent":["import { createRandomDate } from \"./../utils/utilsFn\";\r\nimport {\r\n  FromApiPostType,\r\n  PostType,\r\n  FromApiUser,\r\n  otherUser,\r\n} from \"./../types/Interfaces\";\r\nimport axios from \"axios\";\r\n\r\ninterface ParamsAPI {\r\n  _limit: number;\r\n}\r\n\r\nexport class ApiService {\r\n  private static URL_USERS = \"https://jsonplaceholder.typicode.com/users\";\r\n  private static URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n  static async getUsers(): Promise<otherUser[]> {\r\n    const fromAPIUsers = (await axios.get(this.URL_USERS)).data.map(\r\n      (user: FromApiUser): otherUser => {\r\n        return {\r\n          id: user.id,\r\n          login: user.username,\r\n          email: user.email,\r\n        };\r\n      }\r\n    );\r\n\r\n    return fromAPIUsers;\r\n  }\r\n\r\n  static async getPosts(): Promise<PostType[]> {\r\n    const usersData = await this.getUsers();\r\n    let usersPosts;\r\n\r\n    usersData.forEach(async (userData) => {\r\n      usersPosts =(await axios.get(this.URL_POSTS)).data.map((post: FromApiPostType): PostType => {\r\n        return {\r\n          postId: post.id,\r\n          postTitle: post.title,\r\n          postBody: post.body,\r\n          createdDate: createRandomDate(),\r\n          userId: userData.id,\r\n          authorLogin: userData.login\r\n        };\r\n      });\r\n    });\r\n\r\n    return usersPosts !== undefined ? usersPosts : [];\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAOrD,OAAOC,KAAK,MAAM,OAAO;AAMzB,OAAO,MAAMC,UAAU,CAAC;EAItB,aAAaC,QAAQ,GAAyB;IAC5C,MAAMC,YAAY,GAAG,CAAC,MAAMH,KAAK,CAACI,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC,EAAEC,IAAI,CAACC,GAAG,CAC5DC,IAAiB,IAAgB;MAChC,OAAO;QACLC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACG,QAAQ;QACpBC,KAAK,EAAEJ,IAAI,CAACI;MACd,CAAC;IACH,CAAC,CACF;IAED,OAAOT,YAAY;EACrB;EAEA,aAAaU,QAAQ,GAAwB;IAC3C,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACZ,QAAQ,EAAE;IACvC,IAAIa,UAAU;IAEdD,SAAS,CAACE,OAAO,CAAC,MAAOC,QAAQ,IAAK;MACpCF,UAAU,GAAE,CAAC,MAAMf,KAAK,CAACI,GAAG,CAAC,IAAI,CAACc,SAAS,CAAC,EAAEZ,IAAI,CAACC,GAAG,CAAEY,IAAqB,IAAe;QAC1F,OAAO;UACLC,MAAM,EAAED,IAAI,CAACV,EAAE;UACfY,SAAS,EAAEF,IAAI,CAACG,KAAK;UACrBC,QAAQ,EAAEJ,IAAI,CAACK,IAAI;UACnBC,WAAW,EAAE1B,gBAAgB,EAAE;UAC/B2B,MAAM,EAAET,QAAQ,CAACR,EAAE;UACnBkB,WAAW,EAAEV,QAAQ,CAACP;QACxB,CAAC;MACH,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOK,UAAU,KAAKa,SAAS,GAAGb,UAAU,GAAG,EAAE;EACnD;AACF;AArCad,UAAU,CACNI,SAAS,GAAG,4CAA4C;AAD5DJ,UAAU,CAENiB,SAAS,GAAG,4CAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}