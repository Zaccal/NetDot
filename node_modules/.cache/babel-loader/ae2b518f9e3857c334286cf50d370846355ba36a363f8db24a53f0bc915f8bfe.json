{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksss9\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\MyWorks\\\\net-dot\\\\src\\\\pages\\\\LogInPage.tsx\",\n  _s = $RefreshSig$();\nimport Window from \"../components/window/Window\";\nimport { useState, useContext } from \"react\";\nimport Global from \"../context/Global\";\nimport { Form } from \"react-bootstrap\";\nimport Button from \"react-bootstrap/Button\";\nimport AlertModal from \"../components/alert/AlertModal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LogInPage = () => {\n  _s();\n  const {\n    setLocalStore,\n    localStore\n  } = useContext(Global);\n  const [stateAlert, setStateAlert] = useState({\n    visibleAlert: false,\n    textAlert: ''\n  });\n  const setVisibleAlert = (state, text) => {\n    console.log(true);\n    if (state) {\n      setStateAlert({\n        visibleAlert: true,\n        textAlert: text\n      });\n    }\n  };\n  const [loginData, setLoginData] = useState({\n    userLogin: \"\",\n    userEmail: \"\",\n    userPassword: \"\"\n  });\n  const sendUserDataInLS = () => {\n    if (!!loginData.userEmail && !!loginData.userLogin && !!loginData.userPassword) {\n      setLocalStore({\n        ...localStore,\n        user: loginData\n      });\n    } else {\n      setVisibleAlert(true, 'input');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Window, {\n    children: [/*#__PURE__*/_jsxDEV(AlertModal, {\n      setVisible: setVisibleAlert,\n      visible: stateAlert.visibleAlert,\n      className: \"col-12\",\n      text: stateAlert.textAlert\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      className: \"text-center\",\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"text\",\n        placeholder: \"Login\",\n        onChange: event => setLoginData({\n          ...loginData,\n          userLogin: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicEmail\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Email address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"email\",\n        placeholder: \"Enter email\",\n        onChange: event => setLoginData({\n          ...loginData,\n          userEmail: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Text, {\n        className: \"text-muted\",\n        children: \"We'll never share your email with anyone else.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n      className: \"mb-3\",\n      controlId: \"formBasicPassword\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        type: \"password\",\n        placeholder: \"Password\",\n        onChange: event => setLoginData({\n          ...loginData,\n          userPassword: event.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"primary\",\n      type: \"submit\",\n      className: \"col-12\",\n      onClick: sendUserDataInLS,\n      children: \"Log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(LogInPage, \"3J1E1VtKBxOjxzj32I4BV1XPxek=\");\n_c = LogInPage;\nexport default LogInPage;\nvar _c;\n$RefreshReg$(_c, \"LogInPage\");","map":{"version":3,"names":["Window","useState","useContext","Global","Form","Button","AlertModal","LogInPage","setLocalStore","localStore","stateAlert","setStateAlert","visibleAlert","textAlert","setVisibleAlert","state","text","console","log","loginData","setLoginData","userLogin","userEmail","userPassword","sendUserDataInLS","user","event","target","value"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/pages/LogInPage.tsx"],"sourcesContent":["import Window from \"../components/window/Window\";\r\nimport { UserDataType } from \"../types/Interfaces\";\r\nimport { useState, useContext } from \"react\";\r\nimport Global from \"../context/Global\";\r\nimport { Form } from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport AlertModal from \"../components/alert/AlertModal\";\r\n\r\ninterface stateAlertType {\r\n  visibleAlert: boolean,\r\n  textAlert: string,\r\n}\r\n\r\nconst LogInPage = () => {\r\n  const { setLocalStore, localStore } = useContext(Global);\r\n  const [ stateAlert, setStateAlert ] = useState<stateAlertType>({\r\n    visibleAlert: false,\r\n    textAlert: '',\r\n  })\r\n\r\n  const setVisibleAlert = (state: boolean, text: string) => {\r\n    console.log(true);\r\n    \r\n    if (state) {\r\n      setStateAlert({\r\n        visibleAlert: true,\r\n        textAlert: text,\r\n      })\r\n    }\r\n  }\r\n\r\n  const [loginData, setLoginData] = useState<UserDataType>({\r\n    userLogin: \"\",\r\n    userEmail: \"\",\r\n    userPassword: \"\",\r\n  });\r\n\r\n  const sendUserDataInLS = () => {\r\n    if (\r\n      !!loginData.userEmail &&\r\n      !!loginData.userLogin &&\r\n      !!loginData.userPassword\r\n    ) {\r\n      setLocalStore({ ...localStore, user: loginData });\r\n    }\r\n\r\n    else {            \r\n      setVisibleAlert(true, 'input')\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <Window>\r\n      <AlertModal setVisible={setVisibleAlert} visible={stateAlert.visibleAlert} className=\"col-12\" text={stateAlert.textAlert}/>\r\n      <h4 className=\"text-center\">Log in</h4>\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Login</Form.Label>\r\n        <Form.Control\r\n          type=\"text\"\r\n          placeholder=\"Login\"\r\n          onChange={(event) =>\r\n            setLoginData({ ...loginData, userLogin: event.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\r\n        <Form.Label>Email address</Form.Label>\r\n        <Form.Control\r\n          type=\"email\"\r\n          placeholder=\"Enter email\"\r\n          onChange={(event) =>\r\n            setLoginData({ ...loginData, userEmail: event.target.value })\r\n          }\r\n        />\r\n        <Form.Text className=\"text-muted\">\r\n          We'll never share your email with anyone else.\r\n        </Form.Text>\r\n      </Form.Group>\r\n\r\n      <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\r\n        <Form.Label>Password</Form.Label>\r\n        <Form.Control\r\n          type=\"password\"\r\n          placeholder=\"Password\"\r\n          onChange={(event) =>\r\n            setLoginData({ ...loginData, userPassword: event.target.value })\r\n          }\r\n        />\r\n      </Form.Group>\r\n\r\n      <Button\r\n        variant=\"primary\"\r\n        type=\"submit\"\r\n        className=\"col-12\"\r\n        onClick={sendUserDataInLS}\r\n      >\r\n        Log in\r\n      </Button>\r\n    </Window>\r\n  );\r\n};\r\n\r\nexport default LogInPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}