{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksss9\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\MyWorks\\\\net-dot\\\\src\\\\pages\\\\UserProfile.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from 'react';\nimport { Container } from \"react-bootstrap\";\nimport { useParams } from \"react-router-dom\";\nimport ProfileHeader from \"../components/profile/header/ProfileHeader\";\nimport { ApiService } from '../API/ApiService';\nimport { useFetch } from '../hooks/useFetch';\nimport { createRandomDate } from '../utils/utilsFn';\nimport Post from '../components/Post/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserProfile = () => {\n  _s();\n  const param = useParams();\n  const [user, setUser] = useState({\n    username: '',\n    email: ''\n  });\n  const [userPost, setUserPost] = useState({\n    authorLogin: '',\n    postTitle: '',\n    postBody: '',\n    createdDate: createRandomDate(),\n    postId: 0,\n    userId: 0\n  });\n  const [fetching, loading] = useFetch(async () => {\n    const responseGetUser = await ApiService.getUserById(param.id);\n    const responseGetPost = await ApiService.getPostById(param.id);\n    setUser({\n      username: responseGetUser.username,\n      email: responseGetUser.email\n    });\n    setUserPost({\n      ...userPost,\n      authorLogin: responseGetUser.username,\n      postTitle: responseGetPost.title,\n      postBody: responseGetPost.body,\n      postId: responseGetPost.id,\n      userId: Number(param.id)\n    });\n  });\n  useEffect(() => {\n    fetching();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-5\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(ProfileHeader, {\n        isAuthor: false,\n        loading: loading,\n        userLogin: user.username,\n        userEmail: user.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"mb-3\",\n        children: \"Post: \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), loading && /*#__PURE__*/_jsxDEV(Post, {\n        postId: userPost.postId,\n        postTitle: userPost.postTitle,\n        postBody: userPost.postBody,\n        authorLogin: userPost.authorLogin,\n        userId: userPost.userId,\n        createdDate: userPost.createdDate,\n        isAuthor: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProfile, \"Dnk0KfyUiYCD5kbpfNNhMObvLQA=\", false, function () {\n  return [useParams, useFetch];\n});\n_c = UserProfile;\nexport default UserProfile;\nvar _c;\n$RefreshReg$(_c, \"UserProfile\");","map":{"version":3,"names":["useState","useEffect","Container","useParams","ProfileHeader","ApiService","useFetch","createRandomDate","Post","UserProfile","param","user","setUser","username","email","userPost","setUserPost","authorLogin","postTitle","postBody","createdDate","postId","userId","fetching","loading","responseGetUser","getUserById","id","responseGetPost","getPostById","title","body","Number"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/pages/UserProfile.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from 'react'\r\nimport { Container } from \"react-bootstrap\"\r\nimport { useParams } from \"react-router-dom\"\r\nimport ProfileHeader from \"../components/profile/header/ProfileHeader\"\r\nimport { ApiService } from '../API/ApiService'\r\nimport { useFetch } from '../hooks/useFetch'\r\nimport { FromApiUser, PostType } from '../types/Interfaces'\r\nimport { createRandomDate } from '../utils/utilsFn'\r\nimport Post from '../components/Post/Post'\r\n\r\nconst UserProfile = () => {\r\n  const param = useParams<{id: string}>()\r\n  const [user, setUser] = useState<Omit<FromApiUser, \"id\">>({\r\n    username: '',\r\n    email: '',\r\n  })\r\n  const [userPost, setUserPost] = useState<PostType>({\r\n    authorLogin: '',\r\n    postTitle: '',\r\n    postBody: '',\r\n    createdDate: createRandomDate(),\r\n    postId: 0,\r\n    userId: 0,\r\n  })\r\n\r\n  const [fetching, loading] = useFetch(async () => {\r\n    const responseGetUser = await ApiService.getUserById(param.id!)\r\n    const responseGetPost = await ApiService.getPostById(param.id!)\r\n\r\n    setUser({\r\n      username: responseGetUser.username,\r\n      email: responseGetUser.email\r\n    })\r\n\r\n    setUserPost({...userPost, \r\n      authorLogin: responseGetUser.username,\r\n      postTitle: responseGetPost.title,\r\n      postBody: responseGetPost.body,\r\n      postId: responseGetPost.id,\r\n      userId: Number(param.id!)\r\n    })\r\n  })\r\n\r\n  useEffect(() => {\r\n    fetching()\r\n  }, [])\r\n\r\n  return (\r\n    <div className='mt-5'>\r\n    <Container>\r\n        <ProfileHeader isAuthor={false} loading={loading} userLogin={user.username} userEmail={user.email}/>\r\n        <br />\r\n        <h2 className='mb-3'>Post: </h2>\r\n        {loading && <Post postId={userPost.postId}\r\n        postTitle={userPost.postTitle}\r\n        postBody={userPost.postBody}\r\n        authorLogin={userPost.authorLogin}\r\n        userId={userPost.userId}\r\n        createdDate={userPost.createdDate}\r\n        isAuthor={false}\r\n        />}\r\n    </Container>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,OAAOC,aAAa,MAAM,4CAA4C;AACtE,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,QAAQ,mBAAmB;AAE5C,SAASC,gBAAgB,QAAQ,kBAAkB;AACnD,OAAOC,IAAI,MAAM,yBAAyB;AAAA;AAE1C,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAMC,KAAK,GAAGP,SAAS,EAAgB;EACvC,MAAM,CAACQ,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAA0B;IACxDa,QAAQ,EAAE,EAAE;IACZC,KAAK,EAAE;EACT,CAAC,CAAC;EACF,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAW;IACjDiB,WAAW,EAAE,EAAE;IACfC,SAAS,EAAE,EAAE;IACbC,QAAQ,EAAE,EAAE;IACZC,WAAW,EAAEb,gBAAgB,EAAE;IAC/Bc,MAAM,EAAE,CAAC;IACTC,MAAM,EAAE;EACV,CAAC,CAAC;EAEF,MAAM,CAACC,QAAQ,EAAEC,OAAO,CAAC,GAAGlB,QAAQ,CAAC,YAAY;IAC/C,MAAMmB,eAAe,GAAG,MAAMpB,UAAU,CAACqB,WAAW,CAAChB,KAAK,CAACiB,EAAE,CAAE;IAC/D,MAAMC,eAAe,GAAG,MAAMvB,UAAU,CAACwB,WAAW,CAACnB,KAAK,CAACiB,EAAE,CAAE;IAE/Df,OAAO,CAAC;MACNC,QAAQ,EAAEY,eAAe,CAACZ,QAAQ;MAClCC,KAAK,EAAEW,eAAe,CAACX;IACzB,CAAC,CAAC;IAEFE,WAAW,CAAC;MAAC,GAAGD,QAAQ;MACtBE,WAAW,EAAEQ,eAAe,CAACZ,QAAQ;MACrCK,SAAS,EAAEU,eAAe,CAACE,KAAK;MAChCX,QAAQ,EAAES,eAAe,CAACG,IAAI;MAC9BV,MAAM,EAAEO,eAAe,CAACD,EAAE;MAC1BL,MAAM,EAAEU,MAAM,CAACtB,KAAK,CAACiB,EAAE;IACzB,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF1B,SAAS,CAAC,MAAM;IACdsB,QAAQ,EAAE;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,uBACrB,QAAC,SAAS;MAAA,wBACN,QAAC,aAAa;QAAC,QAAQ,EAAE,KAAM;QAAC,OAAO,EAAEC,OAAQ;QAAC,SAAS,EAAEb,IAAI,CAACE,QAAS;QAAC,SAAS,EAAEF,IAAI,CAACG;MAAM;QAAA;QAAA;QAAA;MAAA,QAAE,eACpG;QAAA;QAAA;QAAA;MAAA,QAAM,eACN;QAAI,SAAS,EAAC,MAAM;QAAA,UAAC;MAAM;QAAA;QAAA;QAAA;MAAA,QAAK,EAC/BU,OAAO,iBAAI,QAAC,IAAI;QAAC,MAAM,EAAET,QAAQ,CAACM,MAAO;QAC1C,SAAS,EAAEN,QAAQ,CAACG,SAAU;QAC9B,QAAQ,EAAEH,QAAQ,CAACI,QAAS;QAC5B,WAAW,EAAEJ,QAAQ,CAACE,WAAY;QAClC,MAAM,EAAEF,QAAQ,CAACO,MAAO;QACxB,WAAW,EAAEP,QAAQ,CAACK,WAAY;QAClC,QAAQ,EAAE;MAAM;QAAA;QAAA;QAAA;MAAA,QACd;IAAA;MAAA;MAAA;MAAA;IAAA;EACM;IAAA;IAAA;IAAA;EAAA,QACN;AAEV,CAAC;AAAA,GAtDKX,WAAW;EAAA,QACDN,SAAS,EAcKG,QAAQ;AAAA;AAAA,KAfhCG,WAAW;AAwDjB,eAAeA,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}