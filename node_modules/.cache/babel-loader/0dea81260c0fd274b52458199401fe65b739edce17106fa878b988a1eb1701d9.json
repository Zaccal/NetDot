{"ast":null,"code":"import { createRandomDate } from \"./../utils/utilsFn\";\nimport axios from \"axios\";\nexport class ApiService {\n  static async getUsers() {\n    const fromAPIUsers = (await axios.get(this.URL_USERS)).data.map(user => {\n      return {\n        id: user.id,\n        login: user.username,\n        email: user.email\n      };\n    });\n    return fromAPIUsers;\n  }\n  static async getPosts() {\n    const usersDatas = await this.getUsers();\n    const usersPosts = await axios.get(this.URL_POSTS);\n    let resultPosts = [];\n    usersPosts.data.forEach((post, index) => {\n      if (resultPosts.length > 9) {\n        resultPosts = [...resultPosts, {\n          postId: post.postId,\n          postTitle: post.postTitle,\n          postBody: post.postBody,\n          createdDate: createRandomDate(),\n          authorLogin: usersDatas[index].login,\n          userId: usersDatas[index].id\n        }];\n      }\n    });\n    return resultPosts !== undefined ? resultPosts : [];\n  }\n}\nApiService.URL_USERS = \"https://jsonplaceholder.typicode.com/users\";\nApiService.URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";","map":{"version":3,"names":["createRandomDate","axios","ApiService","getUsers","fromAPIUsers","get","URL_USERS","data","map","user","id","login","username","email","getPosts","usersDatas","usersPosts","URL_POSTS","resultPosts","forEach","post","index","length","postId","postTitle","postBody","createdDate","authorLogin","userId","undefined"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/API/ApiService.ts"],"sourcesContent":["import { createRandomDate } from \"./../utils/utilsFn\";\r\nimport {\r\n  FromApiPostType,\r\n  PostType,\r\n  FromApiUser,\r\n  otherUser,\r\n} from \"./../types/Interfaces\";\r\nimport axios from \"axios\";\r\n\r\ninterface ParamsAPI {\r\n  _limit: number;\r\n}\r\n\r\nexport class ApiService {\r\n  private static URL_USERS = \"https://jsonplaceholder.typicode.com/users\";\r\n  private static URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n  static async getUsers(): Promise<otherUser[]> {\r\n    const fromAPIUsers = (await axios.get(this.URL_USERS)).data.map(\r\n      (user: FromApiUser): otherUser => {\r\n        return {\r\n          id: user.id,\r\n          login: user.username,\r\n          email: user.email,\r\n        };\r\n      }\r\n    );\r\n\r\n    return fromAPIUsers;\r\n  }\r\n\r\n  static async getPosts(): Promise<PostType[]> {\r\n    const usersDatas = await this.getUsers();\r\n    const usersPosts = await axios.get(this.URL_POSTS)\r\n    let resultPosts: PostType[] = []\r\n\r\n    usersPosts.data.forEach((post: PostType, index: number) => {      \r\n      if (resultPosts.length > 9) {\r\n        resultPosts = [...resultPosts, {\r\n          postId: post.postId,\r\n          postTitle: post.postTitle,\r\n          postBody: post.postBody,\r\n          createdDate: createRandomDate(),\r\n          authorLogin: usersDatas[index].login,\r\n          userId: usersDatas[index].id\r\n        }]\r\n      }\r\n    })\r\n\r\n    return resultPosts !== undefined ? resultPosts : [];\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAOrD,OAAOC,KAAK,MAAM,OAAO;AAMzB,OAAO,MAAMC,UAAU,CAAC;EAItB,aAAaC,QAAQ,GAAyB;IAC5C,MAAMC,YAAY,GAAG,CAAC,MAAMH,KAAK,CAACI,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC,EAAEC,IAAI,CAACC,GAAG,CAC5DC,IAAiB,IAAgB;MAChC,OAAO;QACLC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACG,QAAQ;QACpBC,KAAK,EAAEJ,IAAI,CAACI;MACd,CAAC;IACH,CAAC,CACF;IAED,OAAOT,YAAY;EACrB;EAEA,aAAaU,QAAQ,GAAwB;IAC3C,MAAMC,UAAU,GAAG,MAAM,IAAI,CAACZ,QAAQ,EAAE;IACxC,MAAMa,UAAU,GAAG,MAAMf,KAAK,CAACI,GAAG,CAAC,IAAI,CAACY,SAAS,CAAC;IAClD,IAAIC,WAAuB,GAAG,EAAE;IAEhCF,UAAU,CAACT,IAAI,CAACY,OAAO,CAAC,CAACC,IAAc,EAAEC,KAAa,KAAK;MACzD,IAAIH,WAAW,CAACI,MAAM,GAAG,CAAC,EAAE;QAC1BJ,WAAW,GAAG,CAAC,GAAGA,WAAW,EAAE;UAC7BK,MAAM,EAAEH,IAAI,CAACG,MAAM;UACnBC,SAAS,EAAEJ,IAAI,CAACI,SAAS;UACzBC,QAAQ,EAAEL,IAAI,CAACK,QAAQ;UACvBC,WAAW,EAAE1B,gBAAgB,EAAE;UAC/B2B,WAAW,EAAEZ,UAAU,CAACM,KAAK,CAAC,CAACV,KAAK;UACpCiB,MAAM,EAAEb,UAAU,CAACM,KAAK,CAAC,CAACX;QAC5B,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAOQ,WAAW,KAAKW,SAAS,GAAGX,WAAW,GAAG,EAAE;EACrD;AACF;AAtCahB,UAAU,CACNI,SAAS,GAAG,4CAA4C;AAD5DJ,UAAU,CAENe,SAAS,GAAG,4CAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}