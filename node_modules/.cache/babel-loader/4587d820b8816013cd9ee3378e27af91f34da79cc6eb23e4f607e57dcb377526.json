{"ast":null,"code":"import { createRandomDate } from \"./../utils/utilsFn\";\nimport axios from \"axios\";\nexport class ApiService {\n  static async getUsers(limit, page) {\n    const request = await axios.get(this.URL_USERS, {\n      baseURL: this.URL_USERS,\n      params: {\n        _limit: limit,\n        _page: page\n      }\n    });\n    const fromAPIUsers = request.data.users.map(user => {\n      return {\n        id: user.id,\n        login: user.username\n      };\n    });\n    return fromAPIUsers;\n  }\n  static async getPosts(limit, page) {\n    const usersDatas = await this.getUsers(limit, page);\n    const usersPosts = await axios.get(this.URL_POSTS, {\n      baseURL: this.URL_POSTS,\n      params: {\n        _limit: 10,\n        _page: page\n      }\n    });\n    console.log(usersPosts);\n    let resultPosts = [];\n    usersPosts.data.forEach((post, index) => {\n      resultPosts.push({\n        postId: post.id,\n        postTitle: post.title,\n        postBody: post.body,\n        createdDate: createRandomDate(),\n        authorLogin: usersDatas[index].login,\n        userId: usersDatas[index].id\n      });\n    });\n    return resultPosts !== undefined ? resultPosts : [];\n  }\n  static async getUserById(id) {\n    return (await axios.get(this.URL_USERS + `/${id}`)).data;\n  }\n  static async getPostById(id) {\n    return (await axios.get(this.URL_POSTS + `/${id}`)).data;\n  }\n  static async getTotalCountPosts() {\n    return (await axios.get(this.URL_POSTS)).data.length;\n  }\n  static async getTotalCountUsers() {\n    return (await axios.get(this.URL_USERS)).data.length;\n  }\n}\nApiService.URL_USERS = \"https://dummyjson.com/users\";\nApiService.URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";","map":{"version":3,"names":["createRandomDate","axios","ApiService","getUsers","limit","page","request","get","URL_USERS","baseURL","params","_limit","_page","fromAPIUsers","data","users","map","user","id","login","username","getPosts","usersDatas","usersPosts","URL_POSTS","console","log","resultPosts","forEach","post","index","push","postId","postTitle","title","postBody","body","createdDate","authorLogin","userId","undefined","getUserById","getPostById","getTotalCountPosts","length","getTotalCountUsers"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/API/ApiService.ts"],"sourcesContent":["import { createRandomDate } from \"./../utils/utilsFn\";\r\nimport { FromApiPostType, PostType, FromApiUser, otherUser, } from \"./../types/Interfaces\";\r\nimport axios from \"axios\";\r\n\r\ninterface ParamsAPI {\r\n  limit: number;\r\n  page: number\r\n}\r\n\r\ninterface userFromAPI {\r\n  username: string,\r\n  email: string,\r\n  image: string, \r\n}\r\n\r\ninterface PostFromAPI {\r\n  id: number,\r\n  title: string,\r\n  body: string \r\n}\r\n\r\nexport class ApiService {\r\n  private static URL_USERS = \"https://dummyjson.com/users\";\r\n  private static URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n  static async getUsers(limit: number, page: number): Promise<otherUser[]> {\r\n    const request = await axios.get(this.URL_USERS, {\r\n      baseURL: this.URL_USERS,\r\n      params: {\r\n        _limit: limit,\r\n        _page: page,\r\n      }\r\n    })\r\n\r\n    const fromAPIUsers = request.data.users.map(\r\n      (user: FromApiUser): Pick<otherUser, 'id' | 'login'> => {\r\n        return {\r\n          id: user.id,\r\n          login: user.username,\r\n        };\r\n      }\r\n    );\r\n\r\n    return fromAPIUsers;\r\n  }\r\n\r\n  static async getPosts(limit: number, page: number): Promise<PostType[]> {\r\n    const usersDatas = await this.getUsers(limit, page);\r\n    const usersPosts = await axios.get(this.URL_POSTS, {\r\n      baseURL: this.URL_POSTS,\r\n      params: {\r\n        _limit: 10,\r\n        _page: page,\r\n      }\r\n    })\r\n\r\n    console.log(usersPosts);\r\n    let resultPosts: PostType[] = []\r\n    usersPosts.data.forEach((post: FromApiPostType, index: number) => {      \r\n      resultPosts.push({\r\n        postId: post.id,\r\n        postTitle: post.title,\r\n        postBody: post.body,\r\n        createdDate: createRandomDate(),\r\n        authorLogin: usersDatas[index].login,\r\n        userId: usersDatas[index].id,\r\n      })\r\n    })\r\n\r\n    return resultPosts !== undefined ? resultPosts : [];\r\n  }\r\n\r\n  static async getUserById(id: number | string): Promise<userFromAPI> {\r\n    return (await axios.get(this.URL_USERS + `/${id}`)).data\r\n  }\r\n\r\n  static async getPostById(id: number | string): Promise<PostFromAPI> {\r\n    return (await axios.get(this.URL_POSTS + `/${id}`)).data\r\n  }\r\n\r\n  static async getTotalCountPosts(): Promise<number> {\r\n    return (await axios.get(this.URL_POSTS)).data.length\r\n  }\r\n\r\n  static async getTotalCountUsers(): Promise<number> {\r\n    return (await axios.get(this.URL_USERS)).data.length\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAErD,OAAOC,KAAK,MAAM,OAAO;AAmBzB,OAAO,MAAMC,UAAU,CAAC;EAItB,aAAaC,QAAQ,CAACC,KAAa,EAAEC,IAAY,EAAwB;IACvE,MAAMC,OAAO,GAAG,MAAML,KAAK,CAACM,GAAG,CAAC,IAAI,CAACC,SAAS,EAAE;MAC9CC,OAAO,EAAE,IAAI,CAACD,SAAS;MACvBE,MAAM,EAAE;QACNC,MAAM,EAAEP,KAAK;QACbQ,KAAK,EAAEP;MACT;IACF,CAAC,CAAC;IAEF,MAAMQ,YAAY,GAAGP,OAAO,CAACQ,IAAI,CAACC,KAAK,CAACC,GAAG,CACxCC,IAAiB,IAAsC;MACtD,OAAO;QACLC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACG;MACd,CAAC;IACH,CAAC,CACF;IAED,OAAOP,YAAY;EACrB;EAEA,aAAaQ,QAAQ,CAACjB,KAAa,EAAEC,IAAY,EAAuB;IACtE,MAAMiB,UAAU,GAAG,MAAM,IAAI,CAACnB,QAAQ,CAACC,KAAK,EAAEC,IAAI,CAAC;IACnD,MAAMkB,UAAU,GAAG,MAAMtB,KAAK,CAACM,GAAG,CAAC,IAAI,CAACiB,SAAS,EAAE;MACjDf,OAAO,EAAE,IAAI,CAACe,SAAS;MACvBd,MAAM,EAAE;QACNC,MAAM,EAAE,EAAE;QACVC,KAAK,EAAEP;MACT;IACF,CAAC,CAAC;IAEFoB,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;IACvB,IAAII,WAAuB,GAAG,EAAE;IAChCJ,UAAU,CAACT,IAAI,CAACc,OAAO,CAAC,CAACC,IAAqB,EAAEC,KAAa,KAAK;MAChEH,WAAW,CAACI,IAAI,CAAC;QACfC,MAAM,EAAEH,IAAI,CAACX,EAAE;QACfe,SAAS,EAAEJ,IAAI,CAACK,KAAK;QACrBC,QAAQ,EAAEN,IAAI,CAACO,IAAI;QACnBC,WAAW,EAAErC,gBAAgB,EAAE;QAC/BsC,WAAW,EAAEhB,UAAU,CAACQ,KAAK,CAAC,CAACX,KAAK;QACpCoB,MAAM,EAAEjB,UAAU,CAACQ,KAAK,CAAC,CAACZ;MAC5B,CAAC,CAAC;IACJ,CAAC,CAAC;IAEF,OAAOS,WAAW,KAAKa,SAAS,GAAGb,WAAW,GAAG,EAAE;EACrD;EAEA,aAAac,WAAW,CAACvB,EAAmB,EAAwB;IAClE,OAAO,CAAC,MAAMjB,KAAK,CAACM,GAAG,CAAC,IAAI,CAACC,SAAS,GAAI,IAAGU,EAAG,EAAC,CAAC,EAAEJ,IAAI;EAC1D;EAEA,aAAa4B,WAAW,CAACxB,EAAmB,EAAwB;IAClE,OAAO,CAAC,MAAMjB,KAAK,CAACM,GAAG,CAAC,IAAI,CAACiB,SAAS,GAAI,IAAGN,EAAG,EAAC,CAAC,EAAEJ,IAAI;EAC1D;EAEA,aAAa6B,kBAAkB,GAAoB;IACjD,OAAO,CAAC,MAAM1C,KAAK,CAACM,GAAG,CAAC,IAAI,CAACiB,SAAS,CAAC,EAAEV,IAAI,CAAC8B,MAAM;EACtD;EAEA,aAAaC,kBAAkB,GAAoB;IACjD,OAAO,CAAC,MAAM5C,KAAK,CAACM,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC,EAAEM,IAAI,CAAC8B,MAAM;EACtD;AACF;AAlEa1C,UAAU,CACNM,SAAS,GAAG,6BAA6B;AAD7CN,UAAU,CAENsB,SAAS,GAAG,4CAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}