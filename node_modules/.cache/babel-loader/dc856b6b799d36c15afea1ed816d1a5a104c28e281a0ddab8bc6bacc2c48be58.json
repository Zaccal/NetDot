{"ast":null,"code":"import { createRandomDate } from './../utils/utilsFn';\nimport axios from \"axios\";\nexport class ApiService {\n  static async getUsers() {\n    const fromAPIUsers = (await axios.get(this.URL_USERS)).data.map(user => {\n      return {\n        id: user.id,\n        login: user.login,\n        email: user.email\n      };\n    });\n    return fromAPIUsers;\n  }\n  static async getPosts() {\n    const usersData = await this.getUsers();\n    const fromAPIPosts = (await axios.get(this.URL_POSTS)).data.map(post => {\n      let postFromAPI;\n      usersData.forEach(user => {\n        postFromAPI = {\n          postId: post.id,\n          postTitle: post.title,\n          postBody: post.body,\n          createdDate: createRandomDate(),\n          userId: user.id,\n          authorLogin: user.login\n        };\n      });\n\n      // return postFromAPI !== undefined ? postFromAPI : post\n    });\n\n    console.log(fromAPIPosts);\n    return fromAPIPosts;\n  }\n}\nApiService.URL_USERS = \"https://jsonplaceholder.typicode.com/users\";\nApiService.URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";","map":{"version":3,"names":["createRandomDate","axios","ApiService","getUsers","fromAPIUsers","get","URL_USERS","data","map","user","id","login","email","getPosts","usersData","fromAPIPosts","URL_POSTS","post","postFromAPI","forEach","postId","postTitle","title","postBody","body","createdDate","userId","authorLogin","console","log"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/API/ApiService.ts"],"sourcesContent":["import { createRandomDate } from './../utils/utilsFn';\r\nimport { FromApiPostType, PostType, FromApiUser } from './../types/Interfaces';\r\nimport axios from \"axios\";\r\n\r\nexport class ApiService {\r\n  private static URL_USERS = \"https://jsonplaceholder.typicode.com/users\"\r\n  private static URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n\r\n  static async getUsers(): Promise<FromApiUser[]> {\r\n    const fromAPIUsers = (await axios.get(this.URL_USERS)).data.map((user: FromApiUser): FromApiUser => {\r\n      return {\r\n        id: user.id,\r\n        login: user.login,\r\n        email: user.email\r\n      }\r\n    })\r\n\r\n    return fromAPIUsers\r\n  }\r\n\r\n  static async getPosts(): Promise<PostType[]> {\r\n    const usersData = await this.getUsers()\r\n    \r\n    const fromAPIPosts = (await axios.get(this.URL_POSTS)).data.map((post: FromApiPostType) => {\r\n      let postFromAPI\r\n      usersData.forEach(user => {\r\n          postFromAPI = {\r\n          postId: post.id,\r\n          postTitle: post.title,\r\n          postBody: post.body,\r\n          createdDate: createRandomDate(),\r\n          userId: user.id,\r\n          authorLogin: user.login,\r\n        }\r\n      })\r\n\r\n      // return postFromAPI !== undefined ? postFromAPI : post\r\n    })\r\n\r\n    console.log(fromAPIPosts);\r\n    return fromAPIPosts\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAErD,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,MAAMC,UAAU,CAAC;EAKtB,aAAaC,QAAQ,GAA2B;IAC9C,MAAMC,YAAY,GAAG,CAAC,MAAMH,KAAK,CAACI,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC,EAAEC,IAAI,CAACC,GAAG,CAAEC,IAAiB,IAAkB;MAClG,OAAO;QACLC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBC,KAAK,EAAEH,IAAI,CAACG;MACd,CAAC;IACH,CAAC,CAAC;IAEF,OAAOR,YAAY;EACrB;EAEA,aAAaS,QAAQ,GAAwB;IAC3C,MAAMC,SAAS,GAAG,MAAM,IAAI,CAACX,QAAQ,EAAE;IAEvC,MAAMY,YAAY,GAAG,CAAC,MAAMd,KAAK,CAACI,GAAG,CAAC,IAAI,CAACW,SAAS,CAAC,EAAET,IAAI,CAACC,GAAG,CAAES,IAAqB,IAAK;MACzF,IAAIC,WAAW;MACfJ,SAAS,CAACK,OAAO,CAACV,IAAI,IAAI;QACtBS,WAAW,GAAG;UACdE,MAAM,EAAEH,IAAI,CAACP,EAAE;UACfW,SAAS,EAAEJ,IAAI,CAACK,KAAK;UACrBC,QAAQ,EAAEN,IAAI,CAACO,IAAI;UACnBC,WAAW,EAAEzB,gBAAgB,EAAE;UAC/B0B,MAAM,EAAEjB,IAAI,CAACC,EAAE;UACfiB,WAAW,EAAElB,IAAI,CAACE;QACpB,CAAC;MACH,CAAC,CAAC;;MAEF;IACF,CAAC,CAAC;;IAEFiB,OAAO,CAACC,GAAG,CAACd,YAAY,CAAC;IACzB,OAAOA,YAAY;EACrB;AACF;AAvCab,UAAU,CACNI,SAAS,GAAG,4CAA4C;AAD5DJ,UAAU,CAENc,SAAS,GAAG,4CAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}