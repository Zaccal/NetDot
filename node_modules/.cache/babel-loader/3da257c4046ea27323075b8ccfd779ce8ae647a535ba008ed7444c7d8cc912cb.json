{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksss9\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\MyWorks\\\\net-dot\\\\src\\\\pages\\\\WorldPosts.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect, useMemo } from \"react\";\nimport Filter from \"../components/Filter/Filter\";\nimport List from \"../components/List/List\";\nimport Post from \"../components/Post/Post\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { ApiService } from \"../API/ApiService\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WorldPosts = () => {\n  _s();\n  const [filteredPosts, setFilterdPosts] = useState([]);\n  const [fecthAPI, loading, errorMessage] = useFetch(async () => {\n    const postsFromAPI = await ApiService.getPosts();\n    setFilterdPosts(postsFromAPI);\n  });\n  const posts = useMemo(() => [...filteredPosts], []);\n  useEffect(() => {\n    fecthAPI();\n    console.log(posts);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Filter: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      Posts: posts,\n      setFilteredPosts: setFilterdPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: posts,\n      renderItem: item => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          isAuthor: false,\n          postId: item.postId,\n          postTitle: item.postTitle,\n          postBody: item.postBody,\n          createdDate: item.createdDate,\n          userId: item.userId,\n          authorLogin: item.authorLogin\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 16\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(WorldPosts, \"nMIOiGepMnjx7CUz2bLVfc0MxNE=\", false, function () {\n  return [useFetch];\n});\n_c = WorldPosts;\nexport default WorldPosts;\nvar _c;\n$RefreshReg$(_c, \"WorldPosts\");","map":{"version":3,"names":["useState","useEffect","useMemo","Filter","List","Post","useFetch","ApiService","WorldPosts","filteredPosts","setFilterdPosts","fecthAPI","loading","errorMessage","postsFromAPI","getPosts","posts","console","log","item","postId","postTitle","postBody","createdDate","userId","authorLogin"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/pages/WorldPosts.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect, useMemo } from \"react\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport List from \"../components/List/List\";\r\nimport Post from \"../components/Post/Post\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { ApiService } from \"../API/ApiService\";\r\nimport { PostType } from \"../types/Interfaces\";\r\n\r\nconst WorldPosts = () => {\r\n  const [filteredPosts, setFilterdPosts] = useState<PostType[]>([]);\r\n  const [fecthAPI, loading, errorMessage] = useFetch(async () => { \r\n    const postsFromAPI = await ApiService.getPosts()\r\n    setFilterdPosts(postsFromAPI)  \r\n  })\r\n  const posts = useMemo(() => [...filteredPosts], [])\r\n\r\n  useEffect(() => {\r\n    fecthAPI()\r\n    console.log(posts);\r\n  }, [])\r\n  \r\n\r\n  return (\r\n    <>\r\n      <h1>Filter: </h1>\r\n      {loading && <h1>Loading...</h1>}\r\n      <Filter Posts={posts} setFilteredPosts={setFilterdPosts} />\r\n      <List items={posts} renderItem={(item) => {\r\n        return <Post\r\n          isAuthor={false}\r\n          postId={item.postId}\r\n          postTitle={item.postTitle}\r\n          postBody={item.postBody}\r\n          createdDate={item.createdDate}\r\n          userId={item.userId}\r\n          authorLogin={item.authorLogin}\r\n        />\r\n      }} />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default WorldPosts;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,OAAO,QAAQ,OAAO;AACpD,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,UAAU,QAAQ,mBAAmB;AAAC;AAAA;AAG/C,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAa,EAAE,CAAC;EACjE,MAAM,CAACW,QAAQ,EAAEC,OAAO,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,YAAY;IAC7D,MAAMQ,YAAY,GAAG,MAAMP,UAAU,CAACQ,QAAQ,EAAE;IAChDL,eAAe,CAACI,YAAY,CAAC;EAC/B,CAAC,CAAC;EACF,MAAME,KAAK,GAAGd,OAAO,CAAC,MAAM,CAAC,GAAGO,aAAa,CAAC,EAAE,EAAE,CAAC;EAEnDR,SAAS,CAAC,MAAM;IACdU,QAAQ,EAAE;IACVM,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAGN,oBACE;IAAA,wBACE;MAAA,UAAI;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,EAChBJ,OAAO,iBAAI;MAAA,UAAI;IAAU;MAAA;MAAA;MAAA;IAAA,QAAK,eAC/B,QAAC,MAAM;MAAC,KAAK,EAAEI,KAAM;MAAC,gBAAgB,EAAEN;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,eAC3D,QAAC,IAAI;MAAC,KAAK,EAAEM,KAAM;MAAC,UAAU,EAAGG,IAAI,IAAK;QACxC,oBAAO,QAAC,IAAI;UACV,QAAQ,EAAE,KAAM;UAChB,MAAM,EAAEA,IAAI,CAACC,MAAO;UACpB,SAAS,EAAED,IAAI,CAACE,SAAU;UAC1B,QAAQ,EAAEF,IAAI,CAACG,QAAS;UACxB,WAAW,EAAEH,IAAI,CAACI,WAAY;UAC9B,MAAM,EAAEJ,IAAI,CAACK,MAAO;UACpB,WAAW,EAAEL,IAAI,CAACM;QAAY;UAAA;UAAA;UAAA;QAAA,QAC9B;MACJ;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA,gBACJ;AAEP,CAAC;AAAC,GAhCIjB,UAAU;EAAA,QAE4BF,QAAQ;AAAA;AAAA,KAF9CE,UAAU;AAkChB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}