{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useMemo } from 'react';\nimport { sortEnum } from '../types/enums';\nconst useSortPosts = (posts, sortOption) => {\n  _s();\n  let sortedPosts;\n  sortedPosts = useMemo(() => {\n    if (sortOption === sortEnum.Date) {\n      console.log(sortOption);\n      return posts.sort((post, post2) => post.createdDate.localeCompare(post2.createdDate));\n    } else if (sortOption === sortEnum.Title) {\n      console.log(sortOption);\n      return posts.sort((post, post2) => post.postTitle.localeCompare(post2.postTitle));\n    } else if (sortOption === sortEnum.Description) {\n      console.log(sortOption);\n      return posts.sort((post, post2) => post.postBody.localeCompare(post2.postBody));\n    } else {\n      return posts;\n    }\n  }, [posts, sortOption]);\n  return sortedPosts;\n};\n_s(useSortPosts, \"nwk+m61qLgjDVUp4IGV/072DDN4=\");\nexport default useSortPosts;","map":{"version":3,"names":["useMemo","sortEnum","useSortPosts","posts","sortOption","sortedPosts","Date","console","log","sort","post","post2","createdDate","localeCompare","Title","postTitle","Description","postBody"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/hooks/useSortPosts.ts"],"sourcesContent":["import { useMemo } from 'react';\r\nimport { PostType } from './../types/Interfaces';\r\nimport { sortEnum } from '../types/enums';\r\n\r\nconst useSortPosts = (posts: PostType[], sortOption: string) => {\r\n    let sortedPosts\r\n    sortedPosts = useMemo(() => {\r\n        if (sortOption === sortEnum.Date) {\r\n            console.log(sortOption);\r\n            return posts.sort((post, post2) => post.createdDate.localeCompare(post2.createdDate))\r\n        }\r\n        else if (sortOption === sortEnum.Title) {\r\n            console.log(sortOption);\r\n            \r\n            return posts.sort((post, post2) => post.postTitle.localeCompare(post2.postTitle))\r\n        }\r\n        else if (sortOption === sortEnum.Description) {\r\n            console.log(sortOption);\r\n            \r\n            return posts.sort((post, post2) => post.postBody.localeCompare(post2.postBody))\r\n        }\r\n        else {\r\n            return posts\r\n        }\r\n    }, [posts, sortOption])\r\n\r\n    return sortedPosts\r\n}\r\n\r\nexport default useSortPosts"],"mappings":";AAAA,SAASA,OAAO,QAAQ,OAAO;AAE/B,SAASC,QAAQ,QAAQ,gBAAgB;AAEzC,MAAMC,YAAY,GAAG,CAACC,KAAiB,EAAEC,UAAkB,KAAK;EAAA;EAC5D,IAAIC,WAAW;EACfA,WAAW,GAAGL,OAAO,CAAC,MAAM;IACxB,IAAII,UAAU,KAAKH,QAAQ,CAACK,IAAI,EAAE;MAC9BC,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;MACvB,OAAOD,KAAK,CAACM,IAAI,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACE,WAAW,CAACC,aAAa,CAACF,KAAK,CAACC,WAAW,CAAC,CAAC;IACzF,CAAC,MACI,IAAIR,UAAU,KAAKH,QAAQ,CAACa,KAAK,EAAE;MACpCP,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;MAEvB,OAAOD,KAAK,CAACM,IAAI,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACK,SAAS,CAACF,aAAa,CAACF,KAAK,CAACI,SAAS,CAAC,CAAC;IACrF,CAAC,MACI,IAAIX,UAAU,KAAKH,QAAQ,CAACe,WAAW,EAAE;MAC1CT,OAAO,CAACC,GAAG,CAACJ,UAAU,CAAC;MAEvB,OAAOD,KAAK,CAACM,IAAI,CAAC,CAACC,IAAI,EAAEC,KAAK,KAAKD,IAAI,CAACO,QAAQ,CAACJ,aAAa,CAACF,KAAK,CAACM,QAAQ,CAAC,CAAC;IACnF,CAAC,MACI;MACD,OAAOd,KAAK;IAChB;EACJ,CAAC,EAAE,CAACA,KAAK,EAAEC,UAAU,CAAC,CAAC;EAEvB,OAAOC,WAAW;AACtB,CAAC;AAAA,GAvBKH,YAAY;AAyBlB,eAAeA,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}