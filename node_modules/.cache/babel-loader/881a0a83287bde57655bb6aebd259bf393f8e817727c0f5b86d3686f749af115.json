{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ksss9\\\\OneDrive\\\\\\u0414\\u043E\\u043A\\u0443\\u043C\\u0435\\u043D\\u0442\\u044B\\\\MyWorks\\\\net-dot\\\\src\\\\pages\\\\WorldPosts.tsx\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useState, useEffect } from \"react\";\nimport Filter from \"../components/Filter/Filter\";\nimport List from \"../components/List/List\";\nimport Post from \"../components/Post/Post\";\nimport { useFetch } from \"../hooks/useFetch\";\nimport { ApiService } from \"../API/ApiService\";\nimport { Container } from \"react-bootstrap\";\nimport Loader from \"../components/loader/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// ToDo: create lead posts with observer\n\nconst WorldPosts = () => {\n  _s();\n  const [filteredPosts, setFilterdPosts] = useState([]);\n  const [staticPosts, setStaticPosts] = useState([]);\n  let [pagePosts, setPagePosts] = useState(1);\n  const [fecthAPI, loading, errorMessage] = useFetch(async () => {\n    const postsFromAPI = await ApiService.getPosts({\n      limit: 10,\n      page: pagePosts\n    });\n    setFilterdPosts(postsFromAPI);\n    setStaticPosts(postsFromAPI);\n    const header = await ApiService.getTotalCountPosts();\n  });\n  useEffect(() => {\n    fecthAPI();\n  }, [pagePosts]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"mt-5\",\n      children: \"Filter: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Filter, {\n      Posts: staticPosts,\n      setFilteredPosts: setFilterdPosts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 19\n    }, this), !!errorMessage && /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-danger text-center\",\n      children: [\"Error load posts: \", errorMessage]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 26\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      items: filteredPosts,\n      renderItem: item => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          isAuthor: false,\n          postId: item.postId,\n          postTitle: item.postTitle,\n          postBody: item.postBody,\n          createdDate: item.createdDate,\n          userId: item.userId,\n          authorLogin: item.authorLogin,\n          className: \"post\"\n        }, item.postId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 16\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(WorldPosts, \"7NILB5K+ghUdp1NNXuCviEF6ZXE=\", false, function () {\n  return [useFetch];\n});\n_c = WorldPosts;\nexport default WorldPosts;\nvar _c;\n$RefreshReg$(_c, \"WorldPosts\");","map":{"version":3,"names":["useState","useEffect","Filter","List","Post","useFetch","ApiService","Container","Loader","WorldPosts","filteredPosts","setFilterdPosts","staticPosts","setStaticPosts","pagePosts","setPagePosts","fecthAPI","loading","errorMessage","postsFromAPI","getPosts","limit","page","header","getTotalCountPosts","item","postId","postTitle","postBody","createdDate","userId","authorLogin"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/pages/WorldPosts.tsx"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport { useState, useEffect } from \"react\";\r\nimport Filter from \"../components/Filter/Filter\";\r\nimport List from \"../components/List/List\";\r\nimport Post from \"../components/Post/Post\";\r\nimport { useFetch } from \"../hooks/useFetch\";\r\nimport { ApiService } from \"../API/ApiService\";\r\nimport { PostType } from \"../types/Interfaces\";\r\nimport { Container } from \"react-bootstrap\";\r\nimport Loader from \"../components/loader/Loader\";\r\nimport Pagination from \"../components/Pagination/Pagination\";\r\n\r\n// ToDo: create lead posts with observer\r\n\r\nconst WorldPosts = () => {\r\n  const [filteredPosts, setFilterdPosts] = useState<PostType[]>([]);\r\n  const [staticPosts, setStaticPosts] = useState<PostType[]>([])\r\n  let [pagePosts, setPagePosts] = useState<number>(1)\r\n  const [fecthAPI, loading, errorMessage] = useFetch(async () => { \r\n    const postsFromAPI = await ApiService.getPosts({\r\n      limit: 10,\r\n      page: pagePosts,\r\n    })\r\n    setFilterdPosts(postsFromAPI)\r\n    setStaticPosts(postsFromAPI)\r\n\r\n    const header = await ApiService.getTotalCountPosts()\r\n\r\n    \r\n  })\r\n\r\n  useEffect(() => {\r\n    fecthAPI()\r\n  }, [pagePosts])\r\n    \r\n\r\n  return (\r\n    <Container>\r\n      <h1 className=\"mt-5\">Filter: </h1>\r\n      <br />\r\n      <Filter Posts={staticPosts} setFilteredPosts={setFilterdPosts} />\r\n      <hr />\r\n      <br />\r\n      {loading && <Loader />}\r\n      {!!errorMessage && <h1 className=\"text-danger text-center\">Error load posts: {errorMessage}</h1>}\r\n\r\n      <List items={filteredPosts} renderItem={(item) => {\r\n        return <Post\r\n          isAuthor={false}\r\n          postId={item.postId}\r\n          postTitle={item.postTitle}\r\n          postBody={item.postBody}\r\n          createdDate={item.createdDate}\r\n          userId={item.userId}\r\n          authorLogin={item.authorLogin}\r\n          key={item.postId}\r\n          className=\"post\"\r\n        />\r\n      }} />\r\n      {/* <Pagination /> */}\r\n\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default WorldPosts;\r\n"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,MAAM,MAAM,6BAA6B;AAChD,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,IAAI,MAAM,yBAAyB;AAC1C,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,UAAU,QAAQ,mBAAmB;AAE9C,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,MAAM,MAAM,6BAA6B;AAAC;AAGjD;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,aAAa,EAAEC,eAAe,CAAC,GAAGX,QAAQ,CAAa,EAAE,CAAC;EACjE,MAAM,CAACY,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAa,EAAE,CAAC;EAC9D,IAAI,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAS,CAAC,CAAC;EACnD,MAAM,CAACgB,QAAQ,EAAEC,OAAO,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,YAAY;IAC7D,MAAMc,YAAY,GAAG,MAAMb,UAAU,CAACc,QAAQ,CAAC;MAC7CC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAER;IACR,CAAC,CAAC;IACFH,eAAe,CAACQ,YAAY,CAAC;IAC7BN,cAAc,CAACM,YAAY,CAAC;IAE5B,MAAMI,MAAM,GAAG,MAAMjB,UAAU,CAACkB,kBAAkB,EAAE;EAGtD,CAAC,CAAC;EAEFvB,SAAS,CAAC,MAAM;IACde,QAAQ,EAAE;EACZ,CAAC,EAAE,CAACF,SAAS,CAAC,CAAC;EAGf,oBACE,QAAC,SAAS;IAAA,wBACR;MAAI,SAAS,EAAC,MAAM;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAK,eAClC;MAAA;MAAA;MAAA;IAAA,QAAM,eACN,QAAC,MAAM;MAAC,KAAK,EAAEF,WAAY;MAAC,gBAAgB,EAAED;IAAgB;MAAA;MAAA;MAAA;IAAA,QAAG,eACjE;MAAA;MAAA;MAAA;IAAA,QAAM,eACN;MAAA;MAAA;MAAA;IAAA,QAAM,EACLM,OAAO,iBAAI,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,EACrB,CAAC,CAACC,YAAY,iBAAI;MAAI,SAAS,EAAC,yBAAyB;MAAA,WAAC,oBAAkB,EAACA,YAAY;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAEhG,QAAC,IAAI;MAAC,KAAK,EAAER,aAAc;MAAC,UAAU,EAAGe,IAAI,IAAK;QAChD,oBAAO,QAAC,IAAI;UACV,QAAQ,EAAE,KAAM;UAChB,MAAM,EAAEA,IAAI,CAACC,MAAO;UACpB,SAAS,EAAED,IAAI,CAACE,SAAU;UAC1B,QAAQ,EAAEF,IAAI,CAACG,QAAS;UACxB,WAAW,EAAEH,IAAI,CAACI,WAAY;UAC9B,MAAM,EAAEJ,IAAI,CAACK,MAAO;UACpB,WAAW,EAAEL,IAAI,CAACM,WAAY;UAE9B,SAAS,EAAC;QAAM,GADXN,IAAI,CAACC,MAAM;UAAA;UAAA;UAAA;QAAA,QAEhB;MACJ;IAAE;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAGK;AAEhB,CAAC;AAAC,GAjDIjB,UAAU;EAAA,QAI4BJ,QAAQ;AAAA;AAAA,KAJ9CI,UAAU;AAmDhB,eAAeA,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}