{"ast":null,"code":"import { createRandomDate } from \"./../utils/utilsFn\";\nimport axios from \"axios\";\nexport class ApiService {\n  static async getUsers() {\n    const fromAPIUsers = (await axios.get(this.URL_USERS)).data.map(user => {\n      return {\n        id: user.id,\n        login: user.username,\n        email: user.email\n      };\n    });\n    return fromAPIUsers;\n  }\n  static async getPosts(_ref) {\n    let {\n      limit,\n      page\n    } = _ref;\n    const usersDatas = await this.getUsers();\n    const usersPosts = await axios.get(this.URL_POSTS, {\n      params: {\n        _limit: limit,\n        _page: page\n      }\n    });\n    let resultPosts = [];\n    console.log(usersPosts);\n    usersPosts.data.forEach((post, index) => {\n      if (resultPosts.length !== 10) {\n        resultPosts.push({\n          postId: post.id,\n          postTitle: post.title,\n          postBody: post.body,\n          createdDate: createRandomDate(),\n          authorLogin: usersDatas[index].login,\n          userId: usersDatas[index].id\n        });\n      }\n    });\n    return resultPosts !== undefined ? resultPosts : [];\n  }\n}\nApiService.URL_USERS = \"https://jsonplaceholder.typicode.com/users\";\nApiService.URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";","map":{"version":3,"names":["createRandomDate","axios","ApiService","getUsers","fromAPIUsers","get","URL_USERS","data","map","user","id","login","username","email","getPosts","limit","page","usersDatas","usersPosts","URL_POSTS","params","_limit","_page","resultPosts","console","log","forEach","post","index","length","push","postId","postTitle","title","postBody","body","createdDate","authorLogin","userId","undefined"],"sources":["C:/Users/ksss9/OneDrive/Документы/MyWorks/net-dot/src/API/ApiService.ts"],"sourcesContent":["import { createRandomDate } from \"./../utils/utilsFn\";\r\nimport {\r\n  FromApiPostType,\r\n  PostType,\r\n  FromApiUser,\r\n  otherUser,\r\n} from \"./../types/Interfaces\";\r\nimport axios from \"axios\";\r\n\r\ninterface ParamsAPI {\r\n  limit: number;\r\n  page: number\r\n}\r\n\r\nexport class ApiService {\r\n  private static URL_USERS = \"https://jsonplaceholder.typicode.com/users\";\r\n  private static URL_POSTS = \"https://jsonplaceholder.typicode.com/posts\";\r\n\r\n  static async getUsers(): Promise<otherUser[]> {\r\n    const fromAPIUsers = (await axios.get(this.URL_USERS)).data.map(\r\n      (user: FromApiUser): otherUser => {\r\n        return {\r\n          id: user.id,\r\n          login: user.username,\r\n          email: user.email,\r\n        };\r\n      }\r\n    );\r\n\r\n    return fromAPIUsers;\r\n  }\r\n\r\n  static async getPosts({limit, page}: ParamsAPI): Promise<PostType[]> {\r\n    const usersDatas = await this.getUsers();\r\n    const usersPosts = await axios.get(this.URL_POSTS, {\r\n      params: {\r\n        _limit: limit,\r\n        _page: page\r\n      }\r\n    })\r\n    let resultPosts: PostType[] = []\r\n    console.log(usersPosts);\r\n    usersPosts.data.forEach((post: FromApiPostType, index: number) => {      \r\n      if (resultPosts.length !== 10) {\r\n        resultPosts.push({\r\n          postId: post.id,\r\n          postTitle: post.title,\r\n          postBody: post.body,\r\n          createdDate: createRandomDate(),\r\n          authorLogin: usersDatas[index].login,\r\n          userId: usersDatas[index].id\r\n        })\r\n      }\r\n    })\r\n\r\n    return resultPosts !== undefined ? resultPosts : [];\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,gBAAgB,QAAQ,oBAAoB;AAOrD,OAAOC,KAAK,MAAM,OAAO;AAOzB,OAAO,MAAMC,UAAU,CAAC;EAItB,aAAaC,QAAQ,GAAyB;IAC5C,MAAMC,YAAY,GAAG,CAAC,MAAMH,KAAK,CAACI,GAAG,CAAC,IAAI,CAACC,SAAS,CAAC,EAAEC,IAAI,CAACC,GAAG,CAC5DC,IAAiB,IAAgB;MAChC,OAAO;QACLC,EAAE,EAAED,IAAI,CAACC,EAAE;QACXC,KAAK,EAAEF,IAAI,CAACG,QAAQ;QACpBC,KAAK,EAAEJ,IAAI,CAACI;MACd,CAAC;IACH,CAAC,CACF;IAED,OAAOT,YAAY;EACrB;EAEA,aAAaU,QAAQ,OAAgD;IAAA,IAA/C;MAACC,KAAK;MAAEC;IAAe,CAAC;IAC5C,MAAMC,UAAU,GAAG,MAAM,IAAI,CAACd,QAAQ,EAAE;IACxC,MAAMe,UAAU,GAAG,MAAMjB,KAAK,CAACI,GAAG,CAAC,IAAI,CAACc,SAAS,EAAE;MACjDC,MAAM,EAAE;QACNC,MAAM,EAAEN,KAAK;QACbO,KAAK,EAAEN;MACT;IACF,CAAC,CAAC;IACF,IAAIO,WAAuB,GAAG,EAAE;IAChCC,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;IACvBA,UAAU,CAACX,IAAI,CAACmB,OAAO,CAAC,CAACC,IAAqB,EAAEC,KAAa,KAAK;MAChE,IAAIL,WAAW,CAACM,MAAM,KAAK,EAAE,EAAE;QAC7BN,WAAW,CAACO,IAAI,CAAC;UACfC,MAAM,EAAEJ,IAAI,CAACjB,EAAE;UACfsB,SAAS,EAAEL,IAAI,CAACM,KAAK;UACrBC,QAAQ,EAAEP,IAAI,CAACQ,IAAI;UACnBC,WAAW,EAAEpC,gBAAgB,EAAE;UAC/BqC,WAAW,EAAEpB,UAAU,CAACW,KAAK,CAAC,CAACjB,KAAK;UACpC2B,MAAM,EAAErB,UAAU,CAACW,KAAK,CAAC,CAAClB;QAC5B,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;IAEF,OAAOa,WAAW,KAAKgB,SAAS,GAAGhB,WAAW,GAAG,EAAE;EACrD;AACF;AA3CarB,UAAU,CACNI,SAAS,GAAG,4CAA4C;AAD5DJ,UAAU,CAENiB,SAAS,GAAG,4CAA4C"},"metadata":{},"sourceType":"module","externalDependencies":[]}